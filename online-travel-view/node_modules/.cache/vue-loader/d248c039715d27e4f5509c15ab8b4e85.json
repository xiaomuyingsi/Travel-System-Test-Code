{"remainingRequest":"F:\\Java\\Code\\online-travel-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Java\\Code\\online-travel-view\\src\\components\\PieChart.vue?vue&type=style&index=0&id=63fb763c&scoped=true&lang=scss&","dependencies":[{"path":"F:\\Java\\Code\\online-travel-view\\src\\components\\PieChart.vue","mtime":1721113966000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5saW5lLW1haW4gew0KICBwYWRkaW5nLXRvcDogNDBweDsNCiAgbWFyZ2luLWJvdHRvbTogNXB4Ow0KICBib3JkZXItcmFkaXVzOiAzcHg7DQogIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7DQoNCiAgLnRhZyB7DQogICAgZm9udC1zaXplOiAxNHB4Ow0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICBwYWRkaW5nOiAxNXB4IDZweDsNCiAgICBkaXNwbGF5OiBibG9jazsNCiAgfQ0KDQp9DQo="},{"version":3,"sources":["PieChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"PieChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"line-main\" :style=\"{ backgroundColor: bag }\">\r\n    <div ref=\"chart\" :style=\"{ width: width, height: height }\"></div>\r\n    <div>\r\n      <span class=\"tag\" :style=\"{ color: fontColor }\">\r\n        <i class=\"el-icon-pie-chart\"></i>\r\n        {{ tag }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as echarts from 'echarts'\r\nexport default {\r\n  name: 'PieChart',\r\n  props: {\r\n    types: {\r\n      type: Array,\r\n      default: []\r\n    },\r\n    values: {\r\n      type: Array,\r\n      default: []\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    tag: {\r\n      type: String,\r\n      default: '饼状图'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '243px'\r\n    },\r\n    bag: {\r\n      type: String,\r\n      default: '#fff'\r\n    },\r\n    fontColor:{\r\n      type: String,\r\n      default: '#333'\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null,\r\n    }\r\n  },\r\n  watch: {\r\n    types(v1, v2) {\r\n      this.initChart();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(this.$refs.chart)\r\n      let option = {\r\n        title: {\r\n          text: '',\r\n          subtext: '',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left',\r\n          show: false,\r\n        },\r\n        series: [\r\n          {\r\n            name: '',\r\n            type: 'pie',\r\n            radius: '70%',\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: false,\r\n                fontSize: '24',\r\n                fontWeight: '600'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: true\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'outer',\r\n              formatter: '{d}%'\r\n            },\r\n            data: this.values.map((value, index) => ({\r\n              name: this.types[index],\r\n              value: value,\r\n            })),\r\n            itemStyle: {\r\n              color: function (params) {\r\n                const colorList = [\r\n                  '#525288', \r\n                  '#f0a1a8', \r\n                  '#541e24',\r\n                  '#ADD8E6', \r\n                  '#87CEEB',\r\n                  '#6495ED',\r\n                  '#4682B4', \r\n                ];\r\n                return colorList[params.dataIndex % colorList.length];\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chart.setOption(option)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n    }\r\n  }\r\n}  \r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.line-main {\r\n  padding-top: 40px;\r\n  margin-bottom: 5px;\r\n  border-radius: 3px;\r\n  background-color: #000000;\r\n\r\n  .tag {\r\n    font-size: 14px;\r\n    text-align: center;\r\n    padding: 15px 6px;\r\n    display: block;\r\n  }\r\n\r\n}\r\n</style>"]}]}