{"remainingRequest":"F:\\Java\\Code\\online-travel-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Java\\Code\\online-travel-view\\src\\views\\admin\\ScenicManage.vue?vue&type=style&index=0&id=15aa88dc&scoped=true&lang=scss&","dependencies":[{"path":"F:\\Java\\Code\\online-travel-view\\src\\views\\admin\\ScenicManage.vue","mtime":1744170832443},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Java\\Code\\online-travel-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hZGQtbGluZSB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6IHJnYig2NCwgMTU4LCAyNTUpOwogIHBhZGRpbmc6IDEwcHggMjBweDsKICBtYXJnaW46IDEwcHggMjBweDsKICBjb2xvcjogcmdiKDI0NSwgMjQ1LCAyNDUpOwogIGJvcmRlci1yYWRpdXM6IDVweDsKfQo="},{"version":3,"sources":["ScenicManage.vue"],"names":[],"mappingssfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScenicManage.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <el-row style=\"background-color: #FFFFFF;padding: 5px 0;border-radius: 5px;\">\n    <el-row style=\"padding: 10px 5px;margin: 0 5px;\">\n      <el-row>\n        <el-select @change=\"fetchFreshData\" size=\"small\" v-model=\"scenicQueryDto.categoryId\"\n                   style=\"margin-left: 5px;\" placeholder=\"所属类别\">\n          <el-option v-for=\"item in categories\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\n          </el-option>\n        </el-select>\n        <el-select @change=\"fetchFreshData\" size=\"small\" v-model=\"scenicQueryDto.status\"\n                   style=\"margin-left: 5px;\" placeholder=\"景点状态\">\n          <el-option v-for=\"item in statusList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n          </el-option>\n        </el-select>\n        <el-date-picker size=\"small\" style=\"width: 220px;margin-left: 5px;\" v-model=\"searchTime\"\n                        type=\"daterange\" range-separator=\"至\" start-placeholder=\"创建开始\" end-placeholder=\"创建结束\">\n        </el-date-picker>\n        <el-input size=\"small\" style=\"width: 188px;margin-left: 5px;margin-right: 6px;\"\n                  v-model=\"scenicQueryDto.name\" placeholder=\"景点名\" clearable @clear=\"handleFilterClear\">\n          <el-button slot=\"append\" @click=\"handleFilter\" icon=\"el-icon-search\"></el-button>\n        </el-input>\n        <span style=\"float: right;\">\n                    <el-button size=\"small\"\n                               style=\"background-color: rgb(96, 98, 102);color: rgb(247,248,249);border: none;\"\n                               class=\"customer\" type=\"info\" @click=\"add()\"><i class=\"el-icon-plus\"></i>新增景点</el-button>\n                </span>\n      </el-row>\n    </el-row>\n    <el-row style=\"margin: 0 15px;border-top: 1px solid rgb(245,245,245);\">\n      <el-table :data=\"tableData\" style=\"width: 100%\">\n        <el-table-column prop=\"cover\" label=\"景区封面\" width=\"120px\">\n          <template slot-scope=\"scope\">\n            <img :src=\"scope.row.cover\" style=\"width: 88px;height: 55px;border-radius: 5px;\" />\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"景点名\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"所在地\" width=\"160px\"></el-table-column>\n        <el-table-column prop=\"categoryName\" label=\"所属分类\" width=\"120px\"></el-table-column>\n        <el-table-column prop=\"vendorName\" label=\"供应商\" width=\"120px\"></el-table-column>\n        <el-table-column prop=\"ratingScore\" label=\"评分\" width=\"60px\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.ratingScore === null ? 0 : scope.row.ratingScore }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createTime\" sortable width=\"168\" label=\"创建时间\"></el-table-column>\n        <el-table-column prop=\"isWord\" width=\"108\" label=\"状态\">\n          <template slot-scope=\"scope\">\n            <i v-if=\"!scope.row.status\" style=\"margin-right: 5px;\" class=\"el-icon-warning\"></i>\n            <i v-else style=\"margin-right: 5px;color: rgb(253, 199, 50);\" class=\"el-icon-success\"></i>\n            <el-tooltip v-if=\"scope.row.status\" class=\"item\" effect=\"dark\" content=\"如果是不可用状态，暂停景点服务\"\n                        placement=\"bottom-end\">\n              <span style=\"text-decoration: underline;text-decoration-style: dashed;\">可用</span>\n            </el-tooltip>\n            <span v-else>不可用</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <span class=\"text-button\" @click=\"scenicLineHandle(scope.row)\">景点路线</span>\n            <span class=\"text-button\" @click=\"handleEdit(scope.row)\">编辑</span>\n            <span class=\"text-button\" @click=\"handleDelete(scope.row)\">删除</span>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination style=\"margin:10px 0;\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\n                     :current-page=\"currentPage\" :page-sizes=\"[10, 20]\" :page-size=\"pageSize\"\n                     layout=\"total, sizes, prev, pager, next, jumper\" :total=\"totalItems\"></el-pagination>\n    </el-row>\n    <!-- 操作面板 -->\n    <el-dialog :show-close=\"false\" :visible.sync=\"dialogOperation\" width=\"32%\">\n      <div slot=\"title\">\n        <p class=\"dialog-title\">{{ !isOperation ? '新增景点' : '修改景点信息' }}</p>\n      </div>\n      <div style=\"padding:0 20px;\">\n        <el-row>\n          <span class=\"dialog-hover\">景点封面</span>\n          <el-upload class=\"avatar-uploader\" action=\"/api/online-travel-sys/v1.0/file/upload\"\n                     :show-file-list=\"false\" :on-success=\"handleCoverSuccess\">\n            <img v-if=\"cover\" :src=\"cover\" style=\"width: 250px;height: 150px;\">\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          </el-upload>\n        </el-row>\n        <el-row style=\"margin-bottom: 20px;\">\n          <span class=\"dialog-hover\">景点名称</span>\n          <input class=\"dialog-input\" v-model=\"data.name\" placeholder=\"请输入\" />\n          <span class=\"dialog-hover\">景点所在地址</span>\n          <input class=\"dialog-input\" v-model=\"data.address\" placeholder=\"请输入\" />\n          <div>\n            <span class=\"dialog-hover\">景点状态</span>\n            <el-switch v-model=\"data.status\" active-text=\"可用\" inactive-text=\"不可用\">\n            </el-switch>\n          </div>\n          <div style=\"margin: 10px 0;\">\n            <span class=\"dialog-hover\">景点分类</span>\n            <el-select v-model=\"data.categoryId\" placeholder=\"请选择分类\">\n              <el-option v-for=\"category in categories\" :key=\"category.id\" :label=\"category.name\"\n                         :value=\"category.id\">\n              </el-option>\n            </el-select>\n          </div>\n          <div style=\"margin: 10px 0;\">\n            <span class=\"dialog-hover\">供应商/服务商</span>\n            <el-select v-model=\"data.vendorId\" placeholder=\"请选择\">\n              <el-option v-for=\"vendor in users\" :key=\"vendor.id\" :label=\"vendor.name\" :value=\"vendor.id\">\n              </el-option>\n            </el-select>\n          </div>\n        </el-row>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button size=\"small\" v-if=\"!isOperation\"\n                           style=\"background-color: rgb(96, 98, 102);color: rgb(247,248,249);border: none;\" class=\"customer\"\n                           type=\"info\" @click=\"addOperation()\">新增</el-button>\n                <el-button size=\"small\" v-else\n                           style=\"background-color: rgb(96, 98, 102);color: rgb(247,248,249);border: none;\" class=\"customer\"\n                           type=\"info\" @click=\"updateOperation()\">修改</el-button>\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(211, 241, 241);border: none;\"\n                           @click=\"cannel()\">取消</el-button>\n            </span>\n    </el-dialog>\n    <el-dialog :show-close=\"false\" :visible.sync=\"dialogLineOperation\" width=\"28%\">\n      <div slot=\"title\">\n        <p class=\"dialog-title\">{{ !isLineOperation ? '新增景点路线' : '修改景点路线信息' }}</p>\n      </div>\n      <div style=\"padding:0 20px;\">\n        <el-row>\n          <span class=\"dialog-hover\">路线封面</span>\n          <el-upload class=\"avatar-uploader\" action=\"/api/online-travel-sys/v1.0/file/upload\"\n                     :show-file-list=\"false\" :on-success=\"handleCoverSuccess\">\n            <img v-if=\"cover\" :src=\"cover\" style=\"width: 250px;height: 150px;\">\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          </el-upload>\n        </el-row>\n        <el-row style=\"margin-bottom: 20px;\">\n          <div>\n            <span class=\"dialog-hover\">景点简介</span>\n          </div>\n\n          <el-input style=\"width: 100%;\" type=\"textarea\" :rows=\"2\" placeholder=\"请输入内容\"\n                    v-model=\"scenicLine.detail\">\n          </el-input>\n          <div>\n            <span class=\"dialog-hover\">优先级</span>\n          </div>\n\n          <el-slider v-model=\"scenicLine.level\"></el-slider>\n        </el-row>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button size=\"small\" v-if=\"!isLineOperation\"\n                           style=\"background-color: rgb(96, 98, 102);color: rgb(247,248,249);border: none;\" class=\"customer\"\n                           type=\"info\" @click=\"addLineOperation()\">新增路线</el-button>\n                <el-button size=\"small\" v-else\n                           style=\"background-color: rgb(96, 98, 102);color: rgb(247,248,249);border: none;\" class=\"customer\"\n                           type=\"info\" @click=\"updateLineOperation()\">修改路线</el-button>\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(211, 241, 241);border: none;\"\n                           @click=\"cannelLine()\">取消</el-button>\n            </span>\n    </el-dialog>\n    <el-drawer title=\"景点路线\" width=\"35%\" :visible.sync=\"drawer\" :direction=\"direction\">\n      <div class=\"add-line\">\n                <span @click=\"addLine\" style=\"cursor: pointer;font-size: 14px\">\n                    <i class=\"el-icon-plus\"></i>\n                    添加路线\n                </span>\n      </div>\n      <div v-if=\"scenicLines.length === 0\">\n        <el-empty description=\"暂无路线信息\"></el-empty>\n      </div>\n      <div v-else>\n        <div>\n          <el-timeline>\n            <el-timeline-item v-for=\"(scenicLine, index) in scenicLines\" :key=\"index\"\n                              :timestamp=\"scenicLine.createTime\" placement=\"top\">\n              <el-card>\n                <div>\n                  <img style=\"width: 100%;height: 200px;border-radius: 5px;\" :src=\"scenicLine.cover\"\n                       alt=\"路线封面\">\n                </div>\n                <p style=\"margin-bottom: 8px;font-size: 14px;color: rgb(97, 97, 97);\">{{\n                    scenicLine.detail }}\n                </p>\n                <div>\n                  <el-tooltip class=\"item\" effect=\"dark\" content=\"修改景点路线\" placement=\"bottom\">\n                    <el-button @click=\"updateLine(scenicLine)\" type=\"primary\" icon=\"el-icon-edit\"\n                               circle></el-button>\n                  </el-tooltip>\n                  <el-tooltip class=\"item\" effect=\"dark\" content=\"删除景点路线\" placement=\"bottom\">\n                    <el-button @click=\"deleteLine(scenicLine)\" type=\"danger\" icon=\"el-icon-delete\"\n                               circle></el-button>\n                  </el-tooltip>\n                </div>\n              </el-card>\n            </el-timeline-item>\n          </el-timeline>\n        </div>\n      </div>\n    </el-drawer>\n  </el-row>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      scenicLine: {},\n      data: {},\n      filterText: '',\n      cover: '',\n      currentPage: 1,\n      drawer: false, // 控制景点路线的抽屉开关\n      direction: 'rtl', // right to left\n      pageSize: 10,\n      totalItems: 0,\n      dialogLineOperation: false, // 景点路线弹窗确认\n      isLineOperation: false, // 景点路线操作时显示文本开关\n      dialogOperation: false, // 开关\n      isOperation: false, // 开关-标识新增或修改\n      tableData: [],\n      selectedRows: [],\n      scenicQueryDto: {}, // 搜索条件\n      categories: [],\n      searchTime: [],\n      scenicLines: [],\n      users: [],\n      isAuditList: [{ value: null, label: '全部' }, { value: 0, label: '未审核' }, { value: 1, label: '已审核' }],\n      statusList: [{ value: null, label: '全部' }, { value: 0, label: '不可用' }, { value: 1, label: '可用' }],\n    };\n  },\n  created() {\n    this.fetchFreshData();\n    this.fetchUsers();\n    this.fetchCategories();\n  },\n  methods: {\n    // 修改景点信息\n    updateLine(scenicLine) {\n      this.dialogLineOperation = true;\n      this.isLineOperation = true;\n      this.cover = scenicLine.cover;\n      this.scenicLine = scenicLine;\n    },\n    // 删除景点信息\n    deleteLine(scenicLine) {\n      this.$confirm('此操作将删除该景区路线, 是否继续?', '操作提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        let ids = [scenicLine.id];\n        this.$axios.post(`/scenicLine/batchDelete`, ids).then(res => {\n          if (res.data.code === 200) {\n            this.$message.success('景点路线删除成功');\n            this.fetchScenicLines(this.data.id);\n          }\n        })\n      }).catch(() => {\n        console.log(\"操作取消\");\n      });\n    },\n    cannelLine() {\n      this.scenicLine = {};\n      this.dialogLineOperation = false;\n      this.isLineOperation = false;\n      this.cover = '';\n    },\n    addLine() {\n      this.dialogLineOperation = true;\n    },\n    scenicLineHandle(scenic) {\n      this.data = scenic;\n      this.scenicLine.scenicId = scenic.id;\n      this.fetchScenicLines(scenic.id);\n    },\n    // 请求景点路线信息\n    fetchScenicLines(scenicId) {\n      const scenicLineQueryDto = { scenicId: scenicId }\n      this.$axios.post('/scenicLine/query', scenicLineQueryDto).then(res => {\n        if (res.data.code === 200) {\n          this.scenicLines = res.data.data;\n          this.drawer = true;\n        }\n      }).catch(error => {\n        this.$message.error('查询景点路线信息异常');\n        console.error(\"查询景点路线信息异常：\", error);\n      });\n    },\n    // 封面上传\n    handleCoverSuccess(res, file) {\n      this.$notify({\n        duration: 1500,\n        title: '封面上传',\n        message: res.code === 200 ? '上传成功' : '上传失败',\n        type: res.code === 200 ? 'success' : 'error'\n      });\n      // 上传成功则更新封面\n      if (res.code === 200) {\n        this.cover = res.data;\n      }\n    },\n    // 获取景点分类\n    fetchCategories() {\n      this.$axios.post('/scenicCategory/query', {}).then(res => {\n        if (res.data.code === 200) {\n          this.categories = res.data.data;\n        }\n      }).catch(error => {\n        console.error(\"查询景点分类信息异常：\", error);\n      });\n    },\n    // 获取供应商信息\n    fetchUsers() {\n      this.$axios.post('/vendor/query', {}).then(res => {\n        if (res.data.code === 200) {\n          this.users = res.data.data;\n        }\n      }).catch(error => {\n        console.error(\"查询供应商信息异常：\", error);\n      });\n    },\n    // 置位\n    cannel() {\n      this.data = {};\n      this.cover = '';\n      this.dialogOperation = false;\n      this.isOperation = false;\n    },\n    // 批量删除数据\n    async batchDelete() {\n      if (!this.selectedRows.length) {\n        this.$message(`未选中任何数据`);\n        return;\n      }\n      const confirmed = await this.$swalConfirm({\n        title: '删除景点数据',\n        text: `删除后不可恢复，是否继续？`,\n        icon: 'warning',\n      });\n      if (confirmed) {\n        try {\n          let ids = this.selectedRows.map(entity => entity.id);\n          const response = await this.$axios.post(`/scenic/batchDelete`, ids);\n          if (response.data.code === 200) {\n            this.$swal.fire({\n              title: '删除提示',\n              text: response.data.msg,\n              icon: 'success',\n              showConfirmButton: false,\n              timer: 2000,\n            });\n            this.fetchFreshData();\n            return;\n          }\n        } catch (e) {\n          this.$swal.fire({\n            title: '错误提示',\n            text: e,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n          });\n          console.error(`景点信息删除异常：`, e);\n        }\n      }\n    },\n    // 修改路线信息\n    async updateLineOperation() {\n      try {\n        this.scenicLine.cover = this.cover;\n        const response = await this.$axios.put('/scenicLine/update', this.scenicLine);\n        this.$swal.fire({\n          title: '景点路线信息修改',\n          text: response.data.msg,\n          icon: response.data.code === 200 ? 'success' : 'error',\n          showConfirmButton: false,\n          timer: 1000,\n        });\n        if (response.data.code === 200) {\n          this.fetchScenicLines(this.data.id);\n          this.cannelLine();\n        }\n      } catch (error) {\n        console.error('提交表单时出错:', error);\n        this.$message.error('提交失败，请稍后再试！');\n      }\n    },\n    // 修改信息\n    async updateOperation() {\n      try {\n        this.data.cover = this.cover;\n        const response = await this.$axios.put('/scenic/update', this.data);\n        this.clearFormData();\n        this.$swal.fire({\n          title: '景点信息修改',\n          text: response.data.msg,\n          icon: response.data.code === 200 ? 'success' : 'error',\n          showConfirmButton: false,\n          timer: 1000,\n        });\n        if (response.data.code === 200) {\n          this.cannel();\n          this.fetchFreshData(this.data);\n        }\n      } catch (error) {\n        console.error('提交表单时出错:', error);\n        this.$message.error('提交失败，请稍后再试！');\n      }\n    },\n    // 信息新增\n    async addLineOperation() {\n      try {\n        this.scenicLine.scenicId = this.data.id;\n        this.scenicLine.cover = this.cover;\n        const response = await this.$axios.post('/scenicLine/save', this.scenicLine);\n        this.$message[response.data.code === 200 ? 'success' : 'error'](response.data.msg);\n        if (response.data.code === 200) {\n          this.cannelLine();\n          this.fetchScenicLines(this.data.id);\n        }\n      } catch (error) {\n        console.error('提交表单时出错:', error);\n        this.$message.error('提交失败，请稍后再试！');\n      }\n    },\n    // 信息新增\n    async addOperation() {\n      try {\n        this.data.cover = this.cover;\n        const response = await this.$axios.post('/scenic/save', this.data);\n        this.$message[response.data.code === 200 ? 'success' : 'error'](response.data.msg);\n        if (response.data.code === 200) {\n          this.cannel();\n          this.fetchFreshData();\n        }\n      } catch (error) {\n        console.error('提交表单时出错:', error);\n        this.$message.error('提交失败，请稍后再试！');\n      }\n    },\n    clearFormData() {\n      this.data = {};\n    },\n    async fetchFreshData() {\n      try {\n        let startTime = null;\n        let endTime = null;\n        if (this.searchTime != null && this.searchTime.length === 2) {\n          const [startDate, endDate] = await Promise.all(this.searchTime.map(date => date.toISOString()));\n          startTime = `${startDate.split('T')[0]}T00:00:00`;\n          endTime = `${endDate.split('T')[0]}T23:59:59`;\n        }\n        // 请求参数\n        const params = {\n          current: this.currentPage,\n          size: this.pageSize,\n          key: this.filterText,\n          startTime: startTime,\n          endTime: endTime,\n          ...this.scenicQueryDto\n        };\n        const response = await this.$axios.post('/scenic/query', params);\n        const { data } = response;\n        this.tableData = data.data;\n        this.totalItems = data.total;\n      } catch (error) {\n        console.error('查询景点信息异常:', error);\n      }\n    },\n    add() {\n      this.dialogOperation = true;\n    },\n    handleFilter() {\n      this.currentPage = 1;\n      this.fetchFreshData();\n    },\n    handleFilterClear() {\n      this.filterText = '';\n      this.handleFilter();\n    },\n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.currentPage = 1;\n      this.fetchFreshData();\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.fetchFreshData();\n    },\n    handleEdit(row) {\n      this.cover = row.cover;\n      this.dialogOperation = true;\n      this.isOperation = true;\n      this.data = { ...row }\n    },\n    handleDelete(row) {\n      this.selectedRows.push(row);\n      this.batchDelete();\n    }\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.add-line {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(64, 158, 255);\n  padding: 10px 20px;\n  margin: 10px 20px;\n  color: rgb(245, 245, 245);\n  border-radius: 5px;\n}\n</style>"]}]}